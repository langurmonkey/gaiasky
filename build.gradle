import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id "java"
    id "com.install4j.gradle" version "10.0.4"
    id "com.dorongold.task-tree" version "1.5"
    id "de.undercouch.download" version "4.1.1"
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    ext {
        appName = "GaiaSky"
        gdxVersion = "1.14.0"
        gdxcontrollersVersion = "2.2.3"
        lwjglVersion = "3.3.3"
        jcommanderVersion = "2.+"
        slf4jVersion = "2.0.+"
        sparkjavaVersion = "2.9.+"
        jafamaVersion = "2.3.+"
        commonsioVersion = "2.+"
        py4jVersion = "0.10.9.+"
        oshiVersion = "6.9.+"
        stilVersion = "4.3"
        jsampVersion = "1.3.+"
        jacksonVersion = "2.20.+"
        ashleyVersion = "1.7.4"
        jtarVersion = "2.+"
        junitVersion = "4.+"
        // Vulnerability fixes
        jettyVersion = "10.0.24"
        jsonVersion = "20231013"
        xmlrpcVersion = "3.0"
    }

    repositories {
        mavenCentral()
        maven { url = 'https://jitpack.io' }
    }
}

project(":core") {
    apply plugin: "java-library"

    def cmd = "git describe --abbrev=0 --tags HEAD"
    def proc = cmd.execute()
    project.ext.tag = proc.text.trim()

    cmd = "git rev-parse --short HEAD"
    proc = cmd.execute()
    project.ext.rev = proc.text.trim()

    if (DefaultNativePlatform.currentOperatingSystem.windows) {
        project.ext.system = DefaultNativePlatform.currentOperatingSystem.getName() + " " + DefaultNativePlatform.currentArchitecture.getName()
    } else {
        cmd = "uname -snmr"
        proc = cmd.execute()
        project.ext.system = proc.text.trim()
    }

    project.ext.builder = System.properties["user.name"]
    project.ext.buildtime = new Date()
    version = "$tag"

    println ""
    println "CURRENT SYSTEM"
    println "=============="
    println "java version: " + JavaVersion.current().toString()
    println "system: $system"

    println ""
    println "GAIA SKY"
    println "========"
    println "git tag: $tag"
    println "git rev: $rev"
    println "buildtime: $buildtime"
    println "builder: $builder"
    println ""

    // Set some build variables
    project.ext.baseDir = System.getProperty("user.dir")
    project.ext.tagRev = project.tag + "." + project.rev
    project.ext.distName = "gaiasky-$tagRev"
    project.ext.releasesDir = "$baseDir/releases"
    project.ext.distDir = "$releasesDir/$distName"
    project.ext.packageName = "packages-$tagRev"
    project.ext.packageDir = "$releasesDir/$packageName"

    println ""
    println "BUILD VARIABLES AND INFO"
    println "========================"
    println "base dir: $baseDir"
    println "tag.rev: $tagRev"
    println "dist name: $distName"
    println "dist dir: $distDir"
    println "packages name: $packageName"
    println "packages dir: $packageDir"
    println ""

    tasks.withType(JavaCompile).configureEach { options.compilerArgs << "-parameters" }

    dependencies {
        // *****************************
        // GENERATE SKINS (PackUITextures)
        // *****************************
        compileOnly "com.badlogicgames.gdx:gdx-tools:$gdxVersion"

        // ************
        // REGULAR DEPS
        // ************

        // OpenXR
        implementation "org.lwjgl:lwjgl-openxr:$lwjglVersion"
        implementation "org.lwjgl:lwjgl-glfw:$lwjglVersion"
        runtimeOnly "org.lwjgl:lwjgl-openxr:$lwjglVersion:natives-linux"
        runtimeOnly "org.lwjgl:lwjgl-openxr:$lwjglVersion:natives-windows"

        // LibGDX
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        runtimeOnly "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

        // gdx-controllers:2.+ bases up on SDL 2.0.12
        implementation "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdxcontrollersVersion"
        implementation "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdxcontrollersVersion"

        // Ashley
        implementation "com.badlogicgames.ashley:ashley:$ashleyVersion"

        // STIL library to load datasets
        implementation "uk.ac.starlink:stil:$stilVersion"
        // JSAMP for SAMP communication
        implementation "uk.ac.starlink:jsamp:$jsampVersion"

        // File utilities
        implementation "commons-io:commons-io:$commonsioVersion"
        // Command line arguments
        implementation "org.jcommander:jcommander:$jcommanderVersion"
        // Fast math
        implementation "net.jafama:jafama:$jafamaVersion"
        // Tar
        implementation "org.kamranzafar:jtar:$jtarVersion"

        // JPEGXL
        // implementation "com.github.umjammer:vavi-image-jpegxl:0.0.7"

        // Scripting
        implementation "net.sf.py4j:py4j:$py4jVersion"
        // System information
        implementation "com.github.oshi:oshi-core-java11:$oshiVersion"
        // Yaml
        implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"

        // ****************
        // REST SERVER DEPS
        // ****************
        implementation "org.slf4j:slf4j-nop:$slf4jVersion"
        implementation "com.sparkjava:spark-core:$sparkjavaVersion"

        // *******************
        // VULNERABILITY FIXES
        // *******************
        // CVE-2023-26049
        implementation "org.eclipse.jetty:jetty-xml:$jettyVersion"
        implementation "org.eclipse.jetty:jetty-http:$jettyVersion"
        implementation "org.eclipse.jetty:jetty-server:$jettyVersion"
        // CVE-2022-45690
        implementation "org.json:json:$jsonVersion"
        // CVE-2016-5002
        implementation "org.apache.xmlrpc:xmlrpc:$xmlrpcVersion"

        // *************
        // INTERNAL DEPS
        // *************
        implementation files("../assets")

        // *********
        // TEST DEPS
        // *********
        testImplementation "junit:junit:$junitVersion"
        testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.+"

        // **********
        // DEBUG DEPS
        // **********
        //implementation "org.openjdk.jol:jol-core:+"
    }

    jar {
        manifest {
            attributes "Implementation-Title": "Gaia Sky",
                    "Implementation-Version": archiveVersion,
                    "Main-Class": "gaiasky.desktop.GaiaSkyDesktop"
        }
        from("../assets") {
            include "font/font-distance-field.fnt"
            include "font/font-distance-field.png"
            include "icon/gs_icon_256.png"
            include "icon/gs_round_256.png"
            include "icon/gsvr_round_256.png"
            include "icon/gsascii.txt"
            include "img/**"
            include "text/**"
            include "shader/**"
            include "archetypes/**"
            include "data/**"
            include "shaders/**"
            include "skins/**"
            exclude "skins/raw"
            exclude "assets-bak/**"
        }
        from("build/classes/main") { include "**" }
    }

}
